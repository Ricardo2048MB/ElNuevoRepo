POSICION_LIB MACRO R,COL
	PUSH BX
	PUSH DX
	PUSH AX
	
	MOV BH,0 ;INDICO LA PANTALLA
	MOV DH,R ; INDICO EL RENGLON (0-24)
	MOV DL,COL; INDICO LA COLUMNA(0-79)
	MOV AH, 2H; INTERRUPCION
	INT 10H ; ENVIO LA INTERRUPCION
	POP AX ; DESPUES DE LA INTERRUPCION, EL REGISTRO AX ESTA VACIO
	POP DX ; DESPUES DE LA INTERRUPCION, EL REGISTRO DX ESTA VACIO
	POP BX ; DESPUES DE LA INTERRUPCION, EL REGISTRO BX ESTA VACIO
ENDM

CR EQU 13
LF EQU 10
LIN EQU 80 ; EL 80 DECIMAL ES UNA LETRA P
	E_SUPERIOR_IZQUIERDA 	EQU 0C9H
	E_SUPERIOR_DERECHA 		EQU 0BBH
	E_INFERIOR_IZQUIERDA	EQU 0C8H
	E_INFERIOR_DERECHA 		EQU 0BCH
	BARRA_HORIZONTAL 		EQU 0CDH
	BARRA_HORIZONTAL_NG		EQU 0DCH
	BARRA_CHICA				EQU 0C4H
	BARRA_VERTICAL	 		EQU 0BAH
	BARRA_VERTICAL_CHI	 	EQU 0B3H
	BARRA_FORMA_T 	 		EQU 0CBH


.MODEL SMALL
.DATA
	;VARIABLES
	CONT DB 80

	UNIDAD DW 0
	DECENA DW 0
	CENTENA DW 0
	MILESIMA DW 0
	RESULTADO DW 0
	CONV DB 10 
.CODE

	PUBLIC IMPRIME_HEXADECIMAL
IMPRIME_HEXADECIMAL PROC ;IMPRIME UN NUMERO HEXADECIMAL
	PUSH	CX 
	PUSH	DX
	MOV		DH,DL ; GUARDO EL VALOR DE LA COLUMNA
	MOV		CX,4 ; NUMERO DE DIGITOS
	SHR 	DL,CL ; HAGO LA CONVERSION A HEXADECIMAL
	CALL 	IMPRIME_DIGITO_HEXADECIMAL ; IMPRIME EL DIGITO HEXADECIMAL
	MOV		DL,DH ; REGRESO EL VALOR DEL DIGITO HEXADECIMAL
	AND		DL,0FH ; MUEVE 0FH A DL PARA QUE EL DIGITO HEXADECIMAL SEA 0
	CALL	IMPRIME_DIGITO_HEXADECIMAL  
	POP		DX
	POP		CX
	RET
IMPRIME_HEXADECIMAL ENDP

	PUBLIC IMPRIME_DIGITO_HEXADECIMAL
IMPRIME_DIGITO_HEXADECIMAL		PROC
	PUSH	DX
	CMP		DL,10 ; SI EL DIGITO HEXADECIMAL ES MAYOR A 10, ENTONCES ES UN DIGITO MAYOR A 10
	JAE		LETRA_HEXADECIMAL ; ENTONCES IMPRIMO EL DIGITO HEXADECIMAL COMO LETRA
	ADD		DL,"0" ; SI EL DIGITO HEXADECIMAL ES MENOR A 10, ENTONCES LE AGREGO UN 0
	JMP		IMPRIME_DIGITO ; IMPRIMO EL DIGITO HEXADECIMAL
LETRA_HEXADECIMAL: ; SI EL DIGITO HEXADECIMAL ES MAYOR A 10, ENTONCES IMPRIMO EL DIGITO HEXADECIMAL COMO LETRA
	ADD		DL,"A"-10 ; SI EL DIGITO HEXADECIMAL ES MAYOR A 10, ENTONCES LE AGREGO UN 0
IMPRIME_DIGITO: ; IMPRIMO EL DIGITO 
	CALL	IMPRIME_CARACTER ; IMPRIMO EL CARACTER EN ASCII
	POP 	DX
	RET
IMPRIME_DIGITO_HEXADECIMAL ENDP

	PUBLIC IMPRIME_CARACTER
IMPRIME_CARACTER		PROC ; IMPRIME UN CARACTER EN ASCII
	PUSH	AX
	MOV		AH,2 ; MUEVE 2 A AH PARA QUE LA INTERRUPCION SEA 2H
	INT		21H ; ENVIO LA INTERRUPCION
	POP		AX
	RET
IMPRIME_CARACTER		ENDP

	PUBLIC SALTO_DE_LINEA
SALTO_DE_LINEA PROC
	PUSH AX
	PUSH DX
	MOV		AH,02 ; MUEVE 2 A AH PARA QUE LA INTERRUPCION SEA 2H
	MOV		DL,CR ; MUEVO A DL LA VARAIBLE CR
	INT		21H ; ENVIO LA INTERRUPCION
	MOV		DL,LF ; MUEVO A DL LA VARAIBLE LF
	INT		21H ; ENVIO LA INTERRUPCION
	POP DX
	POP AX
	RET
SALTO_DE_LINEA ENDP

	PUBLIC LINEAS_PRINCIPALES 
LINEAS_PRINCIPALES PROC
		MOV CX,LIN ; MUEVO A CX LA VARIABLE LIN
	CICLO:
		MOV DL, BARRA_HORIZONTAL_NG ; MUEVO A DL LA VARIABLE BARRA_HORIZONTAL_NG
		CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA HORIZONTAL
	LOOP CICLO; REPITO EL CICLO HASTA QUE CX SEA 0

		MOV CX,LIN ; MUEVO A CX LA VARIABLE LIN
	CICLO2:
		MOV DL, BARRA_CHICA ; MUEVO A DL LA VARIABLE BARRA_CHICA
		CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA HORIZONTAL
	LOOP CICLO2 ; REPITO EL CICLO HASTA QUE CX SEA 0
		RET
LINEAS_PRINCIPALES ENDP
	PUBLIC LINEA_DELGADA 
LINEA_DELGADA PROC
	POSICION_LIB 08H,01H ; POSICIONO EL CURSOR EN LA POSICION 08H,01H
	MOV CX, 78 ; MUEVO A CX EL CARACTER 78
	LINEA:
		MOV DL, BARRA_CHICA ; MUEVO A DL LA VARIABLE BARRA_CHICA
		CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA HORIZONTAL
	LOOP LINEA
	RET
LINEA_DELGADA ENDP
	
	PUBLIC IMPRIME_MENSAJE
IMPRIME_MENSAJE PROC
	MOV AH,09H ; MUEVO A AH LA INTERRUPCION 9H
	INT 21H ; ENVIO LA INTERRUPCION
	RET
IMPRIME_MENSAJE ENDP

	PUBLIC LINEA_HORIZONTAL
LINEA_HORIZONTAL PROC
	PUSH CX
	PUSH DX
	MOV CL, CONT ; MUEVO A CL LA VARIABLE CONT
	CICLO_HORIZONTAL: 
		MOV DL, BARRA_HORIZONTAL ; MUEVO A DL LA VARIABLE BARRA_HORIZONTAL
		CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA HORIZONTAL
		LOOP CICLO_HORIZONTAL ; REPITO EL CICLO HASTA QUE CL SEA 0

	POP DX
	POP CX
	RET
LINEA_HORIZONTAL ENDP

	PUBLIC LINEA_VERTICAL
LINEA_VERTICAL PROC
	MOV DL, BARRA_VERTICAL ; MUEVO A DL LA VARIABLE BARRA_VERTICAL
	CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA VERTICAL
	RET
LINEA_VERTICAL ENDP 
	
	PUBLIC LEE_CARACTER_DECIMAL
LEE_CARACTER_DECIMAL PROC 
	MOV AH,01H ; MUEVO A AH LA INTERRUPCION 1H
	INT 21H ; ENVIO LA INTERRUPCION
	SUB AL,30H ; RESTO 30 A AL PARA QUE EL DIGITO DECIMAL SEA EL CORRECTO
	RET
LEE_CARACTER_DECIMAL ENDP

	PUBLIC LEE_4_DECIMALES
LEE_4_DECIMALES PROC
CALL LEE_CARACTER_DECIMAL 
	MOV AH, 00 ; MUEVO A AH EL VALOR 00
	MOV BX, 1000 ; MUEVO A BX EL VALOR 1000
	MUL BX ; MULTIPLICO AX * BX
	MOV MILESIMA, AX ; MUEVO A MILESIMA EL VALOR DE AX

	CALL LEE_CARACTER_DECIMAL
	MOV AH,00 ; MUEVO A AH EL VALOR 00
	MOV BX, 100 ; MUEVO A BX EL VALOR 100
	MUL BX ; MULTIPLICO AX * BX
	MOV CENTENA,AX ; MUEVO A CENTENA EL VALOR DE AX

	CALL LEE_CARACTER_DECIMAL
	MOV AH,00 ; MUEVO A AH EL VALOR 00
	MOV BX, 10 ; MUEVO A BX EL VALOR 10
	MUL BX ; MULTIPLICO AX * BX
	MOV DECENA, AX ; MUEVO A DECENA EL VALOR DE AX

	CALL LEE_CARACTER_DECIMAL
	MOV AH, 00 ; MUEVO A AH EL VALOR 00
	MOV UNIDAD, AX ; MUEVO A UNIDAD EL VALOR DE AX

	MOV AX, MILESIMA ; MUEVO A AX EL VALOR DE MILESIMA
	ADD AX, CENTENA ; AX = AX + CENTENA
	ADD AX, DECENA ; AX = AX + DECENA
	ADD AX, UNIDAD ; AX = AX + UNIDAD
	MOV RESULTADO,AX ; MUEVO A RESULTADO EL VALOR DE AX

	MOV DX, RESULTADO ; MUEVO A DX EL VALOR DE RESULTADO
	RET
LEE_4_DECIMALES ENDP

LINEA_HORIZONTAL2 PROC
	MOV CONT, 75 ; MUEVO A CONT EL VALOR 75
	POSICION_LIB 11, 02 ; POSICIONO EL CURSOR EN LA POSICION 11,02
	CALL LINEA_HORIZONTAL
	POSICION_LIB 15, 02 ; POSICIONO EL CURSOR EN LA POSICION 15,02
	CALL LINEA_HORIZONTAL
	MOV CONT,12 ; MUEVO A CONT EL VALOR 12
	CALL LINEA_VERTICAL4

	RET
LINEA_HORIZONTAL2 ENDP

LINEA_VERTICAL4 PROC
	;MOV CONT, 16
	MOV CX, 03H ; MUEVO A CX EL VALOR 03H
	CICLO_VERTICAL:
		POSICION_LIB CONT, 14 ; POSICIONO EL CURSOR EN LA POSICION CONT,14
		CALL IMP_BARRA_CHICA
		POSICION_LIB CONT, 33 ; POSICIONO EL CURSOR EN LA POSICION CONT,33
		CALL IMP_BARRA_CHICA
		POSICION_LIB CONT, 50 ; POSICIONO EL CURSOR EN LA POSICION CONT,50
		CALL IMP_BARRA_CHICA
		POSICION_LIB CONT,77 ; POSICIONO EL CURSOR EN LA POSICION CONT,77
		CALL IMP_BARRA_CHICA 
		ADD CONT, 01H ; SUMO 1 A CONT
	LOOP CICLO_VERTICAL ; REPITO EL CICLO HASTA QUE CONT SEA 16
	RET
LINEA_VERTICAL4 ENDP

IMP_BARRA_CHICA PROC
	PUSH DX 
	MOV DL, BARRA_VERTICAL_CHI ; MUEVO A DL LA VARIABLE BARRA_VERTICAL_CHI
	CALL IMPRIME_CARACTER ; IMPRIMO LA BARRA VERTICAL
	POP DX 
	RET
IMP_BARRA_CHICA ENDP

	PUBLIC IMPRIME_DECIMAL
IMPRIME_DECIMAL 	PROC
	PUSH	AX
	PUSH	CX
	PUSH	DX
	MOV		AX,DX ; MUEVO A AX EL VALOR DE DX
	XOR		CX,CX ; LIMPIO EL REGISTRO CX
NO_CERO:
	XOR		DX,DX ; LIMPIO EL REGISTRO DX
	DIV		SI ; DIVIDE AX ENTRE EL VALOR DE SI  Y LO DEVUELVE EN DX
	PUSH	DX
	INC		CX ; INCREMENTO EL REGISTRO CX
	OR		AX,AX 
	JNE	NO_CERO ; SI EL VALOR DE AX ES 0 ENTONCES OR LO DEVUELVE 1
IMPRIME_CICLO:
	POP		DX
	CALL	IMPRIME_DIGITO_HEXADECIMAL ; IMPRIMO EL DIGITO HEXADECIMAL
	LOOP	IMPRIME_CICLO ; REPITO EL CICLO HASTA QUE CX SEA 0
FIN_DECIMAL:
	POP		DX
	POP		CX
	POP		AX
	RET
IMPRIME_DECIMAL 	ENDP

END