.MODEL SMALL
.CODE

; PROCEDIMIENTO UNO
	PUBLIC CREA_DECIMAL
CREA_DECIMAL PROC
	CALL READ_CHAR
	SUB AL,30H
	MOV AH,00
    MUL BX
    ADD CX,AX
    RET
CREA_DECIMAL ENDP

;PROCEDIMIENTO DOS

	PUBLIC READ_CHAR
READ_CHAR PROC
	MOV AH,01H
	INT 21H
	RET
READ_CHAR ENDP

	PUBLIC READ_CHAR_SIN_ECHO
READ_CHAR_SIN_ECHO PROC
	MOV AH,08H
	INT 21H
	RET
READ_CHAR_SIN_ECHO ENDP

	PUBLIC WRITE_HEX
WRITE_HEX   	PROC
    	PUSH    CX
    	PUSH    DX
    	MOV     DH,DL
    	MOV     CX,4
    	SHR     DL,CL
    	CALL    WRITE_HEX_DIGIT
    	MOV     DL,DH
    	AND     DL,0FH
    	CALL    WRITE_HEX_DIGIT
    	POP     DX
    	POP     CX
    	RET
WRITE_HEX   	ENDP

	PUBLIC WRITE_HEX_DIGIT	
WRITE_HEX_DIGIT PROC
    	PUSH    DX
    	CMP 	DL,10
    	JAE 	HEX_LETTER
    	ADD 	DL,"0"
    	JMP 	Short WRITE_DIGIT
HEX_LETTER:
    	ADD 	DL,"A"-10
WRITE_DIGIT:
    	CALL    WRITE_CHAR
    	POP     DX
    	RET
WRITE_HEX_DIGIT ENDP

	
	PUBLIC WRITE_DECIMAL
WRITE_DECIMAL	PROC
	PUSH	AX
	PUSH	CX
	PUSH	DX
	PUSH	SI
	MOV		AX,DX
	;MOV	 SI,16
	XOR		CX,CX
NON_ZERO:
	XOR		DX,DX
	DIV		SI
	PUSH	DX
	INC		CX
	OR		AX,AX
	JNE		NON_ZERO
	MOV		BX,CX
WRITE_DIGIT_LOOP:
	POP		DX
	CALL	WRITE_HEX_DIGIT
	LOOP	WRITE_DIGIT_LOOP
END_DECIMAL:
	POP	SI
	POP	DX
	POP	CX
	POP	AX
	RET
WRITE_DECIMAL	ENDP

PUBLIC WRITE_STRING
WRITE_STRING PROC
	PUSH AX
	MOV AH,09H
	INT 21H
	POP AX
	RET
WRITE_STRING ENDP

	PUBLIC WRITE_CHAR
WRITE_CHAR PROC
	PUSH AX
	MOV AH,02H
	INT 21H
	POP AX
	RET
WRITE_CHAR ENDP

	PUBLIC WRITE_NCHAR
WRITE_NCHAR PROC
	PUSH AX
REPEAT_LOOP:
	MOV AH,02H
	INT 21H
    LOOP REPEAT_LOOP
	POP AX
	RET
WRITE_NCHAR ENDP

	PUBLIC WRITE_EOL
WRITE_EOL PROC
	PUSH DX
	MOV DL,10
	CALL WRITE_CHAR
	MOV DL,13
	CALL WRITE_CHAR
	POP DX
	RET
WRITE_EOL ENDP

	PUBLIC OPEN_FRAME
OPEN_FRAME PROC
	PUSH CX
	PUSH DX
	MOV DL,10
	CALL WRITE_CHAR
	MOV DL,13
	CALL WRITE_CHAR
	MOV DL,201
	CALL WRITE_CHAR
	MOV DL,205
	MOV CX,80
	CALL WRITE_NCHAR
	MOV DL,187
	CALL WRITE_CHAR
	POP DX
	POP CX
	RET
OPEN_FRAME ENDP

	PUBLIC CLOSE_FRAME
CLOSE_FRAME PROC
	PUSH CX
	PUSH DX
	MOV DL,10
	CALL WRITE_CHAR
	MOV DL,13
	CALL WRITE_CHAR
	MOV DL,200
	CALL WRITE_CHAR
	MOV DL,205
	MOV CX,80
	CALL WRITE_NCHAR
	MOV DL,188
	CALL WRITE_CHAR
	POP DX
	POP CX
	RET
CLOSE_FRAME ENDP

	PUBLIC MIDDLE_FRAME
MIDDLE_FRAME PROC
	PUSH CX
	PUSH DX
	MOV DL,10
	CALL WRITE_CHAR
	MOV DL,13
	CALL WRITE_CHAR
	MOV DL,204
	CALL WRITE_CHAR
	MOV DL,205
	MOV CX,80
	CALL WRITE_NCHAR
	MOV DL,185
	CALL WRITE_CHAR
	POP DX
	POP CX
	RET
MIDDLE_FRAME ENDP

	PUBLIC EMPTY_FRAME
EMPTY_FRAME PROC
	PUSH CX
	PUSH DX
	MOV DL,10
	CALL WRITE_CHAR
	MOV DL,13
	CALL WRITE_CHAR
	MOV DL,186
	CALL WRITE_CHAR
	MOV DL,32
	MOV CX,80
	CALL WRITE_NCHAR
	MOV DL,186
	CALL WRITE_CHAR
	POP DX
	POP CX
	RET
EMPTY_FRAME ENDP

	PUBLIC COMPLETE_FRAME
COMPLETE_FRAME PROC
	PUSH DX
	MOV DL,32
	CALL WRITE_NCHAR
	MOV DL,186
	CALL WRITE_CHAR
	POP DX
	RET
COMPLETE_FRAME ENDP
END