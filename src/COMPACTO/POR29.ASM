ESQD_1 EQU 0C9H
ESQD_2 EQU 0BBH
ESQD_3 EQU 0C8H
ESQD_4 EQU 0BCH
; ESQS_1  EQU 0DAH
; ESQS_2  EQU 0BFH
; ESQS_3  EQU 0C0H
; ESQS_4  EQU 0D9H
T_1 EQU 0CCH
T_2 EQU 0B9H
BD_X EQU 0CDH
BD_Y EQU 0BAH
BS_X EQU 0C4H
BS_Y EQU 0B3H
GBAJO EQU 5FH
AC EQU 0B5H
EC EQU 090H
IC EQU 0D6H
OC EQU 0E0H
UC EQU 0E9H
NN EQU 0A5H
INTERAP EQU 0A8H
.MODEL SMALL
.STACK
.DATA
	NUNI DB "UNIVERSIDAD TECNOL", OC, "GICA DE M", EC, "XICO", "$";33CARACTERES
	NASIG DB "ARQUITECTURA Y PROGRAMACI", OC, "N DE COMPUTADORAS", "$";43 CARACTERES
	NINT DB "CASTA", NN, "EDA MEJ", IC, "A ALEJANDRO, MU", NN, "OZ BOLA", NN, "OS RICARDO, REYES ", AC, "LVAREZ JOS", EC, " ANTONIO, Y ROMERO L", AC, "ZARO MARTHA ALEJANDRA.", "$"
	TIT DB "TABLA DE CONVERSIONES", "$";21CARACTERES
	PR1 DB "DIG", IC, "TE UN N", UC, "MERO (DE HASTA 4 D", IC, "GITOS): ", "$";38 CARACTERES
	_DEC DB "DECIMAL", "$";7 CARACTERES
	_BIN DB "BINARIO", "$";7 CARACTERES
	_HEX DB "HEXADECIMAL", "$";11 CARACTERES
	_OCT DB "OCTAL", "$";5 CARACTERES
	PR2 DB INTERAP, "QUIERES CONVERTIR OTRO N", UC, "MERO? (ESCRIBE X PARA SALIR; CUALQUIER OTRA LETRA PARA CONTINUAR)  ", "$";55 CARACTERES
	; AUCSDEC DB "9999", "$"
	; AUCSBIN DB "0010011100001111", "$";16DIGITOS
	; AUCSHEX DB "270F", "$";4DIGITOS
	; AUCSOCT DB "23417", "$";5DIGITOS
	UNIDAD DW 0H
	DECENA DW 0H
	CENTENA DW 0H
	UMILLAR DW 0H
	RESULTADO DW 0H
.CODE
	EXTRN CARGAR_DATOS:PROC
	EXTRN LINEA_GENERAL:PROC
	EXTRN DALE_ENTER:PROC
	EXTRN IMPRIME_CADENA:PROC
	EXTRN IMPRIME_CARACTER:PROC
	EXTRN LEE_CARACTER:PROC
	EXTRN LEE_1DECIMAL:PROC
	EXTRN PRODUCTO:PROC
	EXTRN LEER_SIN_ECO:PROC
	PUBLIC CREAR_PORTADA
	CREAR_PORTADA PROC
		XOR AX, AX
		XOR BX, BX
		XOR CX, CX
		XOR DX, DX
		CALL CARGAR_DATOS
		MOV CX, 120
		MOV DL, BD_X
		CALL LINEA_GENERAL
		CALL DALE_ENTER
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, NUNI
		CALL IMPRIME_CADENA
		CALL DALE_ENTER
		MOV CX, 120
		MOV DL, BD_X
		CALL LINEA_GENERAL
		CALL DALE_ENTER
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, NASIG
		CALL IMPRIME_CADENA
		RET
	CREAR_PORTADA ENDP
	PUBLIC CREAR_LINEA_VACIA
	CREAR_LINEA_VACIA PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV CX, 118;120
		MOV DL, " "
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_LINEA_VACIA ENDP
	PUBLIC CREAR_TAPA_ARRIBA
	CREAR_TAPA_ARRIBA PROC
		MOV DL, ESQD_1
		CALL IMPRIME_CARACTER
		MOV CX, 118
		MOV DL, BD_X
		CALL LINEA_GENERAL
		MOV DL, ESQD_2
		CALL IMPRIME_CARACTER
		RET
	CREAR_TAPA_ARRIBA ENDP
	PUBLIC CREAR_TAPA_ABAJO
	CREAR_TAPA_ABAJO PROC
		MOV DL, ESQD_3
		CALL IMPRIME_CARACTER
		MOV CX, 118
		MOV DL, BD_X
		CALL LINEA_GENERAL
		MOV DL, ESQD_4
		CALL IMPRIME_CARACTER
		RET
	CREAR_TAPA_ABAJO ENDP
	PUBLIC CREAR_INTEGRANTES
	CREAR_INTEGRANTES PROC
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, NINT
		CALL IMPRIME_CADENA
		RET
	CREAR_INTEGRANTES ENDP
	PUBLIC CREAR_TITULO
	CREAR_TITULO PROC
		MOV DL, BD_Y;PARED
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, TIT
		CALL IMPRIME_CADENA;;;;;;;;;;;;;;;;;;;;;21caracteres
		MOV CX, 95
		MOV DL, " "
		CALL LINEA_GENERAL
		MOV DL, BD_Y;PARED
		CALL IMPRIME_CARACTER
		CALL DALE_ENTER
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV CX, 118
		MOV DL, BS_X
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_TITULO ENDP
	PUBLIC CREAR_PROMPT1
	CREAR_PROMPT1 PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, PR1;39 CARACTERES
		CALL IMPRIME_CADENA
		; LEA DX, AUCSDEC
		; CALL IMPRIME_CADENA
		CALL LEE; SE SUPONE QUE AQUI VA A LEER TODOS LOS NUMEROS
		MOV DL,  " "
		MOV CX, 73;77
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_PROMPT1 ENDP
	PUBLIC TAPA_TABLA; LA RAYA MIDE 75
	TAPA_TABLA PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 19
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, BD_X
		MOV CX, 75
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 20
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	TAPA_TABLA ENDP
	;EN ESTA CONFIGURACION ME SOBRAN 39 ESPACIOS
	PUBLIC CREAR_SUBLINEA_VACIA
	CREAR_SUBLINEA_VACIA PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 19
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 18
		CALL LINEA_GENERAL
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 18
		CALL LINEA_GENERAL
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 18
		CALL LINEA_GENERAL
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 18
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, " "
		MOV CX, 20
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_SUBLINEA_VACIA ENDP
	PUBLIC CREAR_LINEA_CAMPOS
	CREAR_LINEA_CAMPOS PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 19
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;MEDIO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 5
		CALL LINEA_GENERAL
		LEA DX, _DEC
		CALL IMPRIME_CADENA
		MOV  DL, " "
		MOV CX, 6
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 5
		CALL LINEA_GENERAL
		LEA DX, _BIN
		CALL IMPRIME_CADENA
		MOV  DL, " "
		MOV CX, 6
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 3
		CALL LINEA_GENERAL
		LEA DX, _HEX
		CALL IMPRIME_CADENA
		MOV  DL, " "
		MOV CX, 4
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 6
		CALL LINEA_GENERAL
		LEA DX, _OCT
		CALL IMPRIME_CADENA
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		;;;;;;;;;;;;;;;;;;;;;;;;;;MEDIO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, " "
		MOV CX, 20
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_LINEA_CAMPOS ENDP
	PUBLIC CREAR_LINEA_NUMEROS
	CREAR_LINEA_NUMEROS PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 19
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL;21 EN TOTAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;MEDIO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		; LEA DX, AUCSDEC
		; CALL IMPRIME_CADENA
		MOV SI, 10
		MOV DX, RESULTADO
		CALL DIV_SUCESIVAS_B
		MOV CX, 4
		CALL RELLENAR_CON_ESPACIOS
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 1
		CALL LINEA_GENERAL
		; LEA DX, AUCSBIN
		; CALL IMPRIME_CADENA
		MOV SI, 2
		MOV DX, RESULTADO
		CALL DIV_SUCESIVAS_B
		MOV CX, 16
		CALL RELLENAR_CON_ESPACIOS
		MOV  DL, " "
		MOV CX, 1
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		; LEA DX, AUCSHEX
		; CALL IMPRIME_CADENA
		MOV SI, 16
		MOV DX, RESULTADO
		CALL DIV_SUCESIVAS_B
		MOV CX, 4
		CALL RELLENAR_CON_ESPACIOS
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, BS_Y
		CALL IMPRIME_CARACTER
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		MOV  DL, " "
		MOV CX, 6
		CALL LINEA_GENERAL
		; LEA DX, AUCSOCT
		; CALL IMPRIME_CADENA
		MOV SI, 8
		MOV DX, RESULTADO
		CALL DIV_SUCESIVAS_B
		MOV CX, 5
		CALL RELLENAR_CON_ESPACIOS
		MOV  DL, " "
		MOV CX, 7
		CALL LINEA_GENERAL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CELDA;;;;;;;;;;;;;;;;;;;;;;;
		;;;;;;;;;;;;;;;;;;;;;;;;;;MEDIO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		MOV DL, " "
		MOV CX, 20
		CALL LINEA_GENERAL
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_LINEA_NUMEROS ENDP
	PUBLIC CREAR_PROMPT2
	CREAR_PROMPT2 PROC
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		MOV DL, " "
		MOV CX, 2
		CALL LINEA_GENERAL
		LEA DX, PR2;55 CARACTERES (ex 38)
		CALL IMPRIME_CADENA
		MOV DL,  " "
		MOV CX, 23;50
		CALL LINEA_GENERAL
		MOV DL, BD_Y
		CALL IMPRIME_CARACTER
		RET
	CREAR_PROMPT2 ENDP
	PUBLIC LEE
	LEE PROC
		MOV RESULTADO, 0000H; LO PONDRE AQUI POR SI HAY FALLA
		CALL LEE_1DECIMAL
		MOV BX, 1000
		CALL PRODUCTO
		MOV UMILLAR, AX
		CALL LEE_1DECIMAL
		MOV BX, 100
		CALL PRODUCTO
		MOV CENTENA, AX
		CALL LEE_1DECIMAL
		MOV BX, 10
		CALL PRODUCTO
		MOV DECENA, AX
		CALL LEE_1DECIMAL
		MOV UNIDAD, AX
		XOR AX, AX
		ADD AX, UMILLAR
		ADD AX, CENTENA
		ADD AX, DECENA
		ADD AX, UNIDAD
		MOV RESULTADO, AX
		RET
	LEE ENDP
	PUBLIC DIV_SUCESIVAS_B
	DIV_SUCESIVAS_B PROC
	COMMENT !
		ESTE PROCEDIMIENTO REQUIERE QUE LA BASE POR LA CUAL SE QUIERE DIVIDIR SEA PUESTA EN EL REGISTRO SI
		TAMBIEN REQUIERE QUE EL NUMERO QUE SE QUIERE IMPRIMIR ESTE GUARDADO EN EL REGISTRO DX
		EL REGISTRO CX LLEVA LA CUENTA DE LAS DIVISIONES SUCESIVAS REALIZADAS
		EL PROCEDIMIENTO VA GUARDANDO LOS RESIDUOS EN LA PILA Y AL FINAL LOS IMPRIME EN EL ORDEN CORRECTO
	!
		PUSH AX
		PUSH CX
		PUSH DX
		PUSH SI
		MOV AX, DX
		XOR CX, CX
	NO_ES_CERO:
		XOR DX, DX
		DIV SI
		PUSH DX
		INC CX
		OR AX, AX
		JNZ NO_ES_CERO
		MOV BX, CX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OJO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CICLO_ESCRIBE_DIGITO:
		POP DX
		CALL ESCRIBE_DIGITO_HEXA
		LOOP CICLO_ESCRIBE_DIGITO
		POP SI
		POP DX
		POP CX
		POP AX
		RET
	DIV_SUCESIVAS_B ENDP
	PUBLIC ESCRIBE_DIGITO_HEXA
	ESCRIBE_DIGITO_HEXA PROC
	COMMENT !
		ESTE PROCEDIMIENTO REQUIERE QUE EL DIGITO QUE SE QUIERE ESCRIBIR ESTE GUARDADO EN EL REGISTRO DL
		IMPRIME UN NUMERO O UNA LETRA SEGUN SE REQUIERA
	!
		PUSH DX
		CMP DL, 10
		JAE LETRA_HEXA
		ADD DL, "0"
		JMP SHORT ESCRIBE_DIGITO
		LETRA_HEXA:
		ADD DL, "A"-10
		ESCRIBE_DIGITO:
		CALL IMPRIME_CARACTER
		POP DX
		RET
	ESCRIBE_DIGITO_HEXA ENDP
	PUBLIC RELLENAR_CON_ESPACIOS
	RELLENAR_CON_ESPACIOS PROC
		SUB CX, BX
		MOV DL, " "
		CALL LINEA_GENERAL
		RET
	RELLENAR_CON_ESPACIOS ENDP
.EXIT
END